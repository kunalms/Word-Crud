plugins {
	id 'org.springframework.boot' version '2.6.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "com.github.node-gradle.node" version "3.2.1"
}

group = 'com.kunal'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

apply plugin: 'com.github.node-gradle.node'

node {
	version = '14.19.0'
	npmVersion = '6.14.16'
	download = true
	nodeModulesDir = file('frontend')
}

tasks.named('test') {
	useJUnitPlatform()
}

task installClient(type: NpmTask, dependsOn: 'npmInstall') {
	group = 'build setup'
	description = 'Install node dependencies'
	args = ['run']
}

task buildClientProd(type: NpmTask, dependsOn: [npmInstall]) {
	group = 'build'
	description = 'Compile client side assets for production'
	args = ['run', 'build']
}

task buildClientDev(type: NpmTask, dependsOn: [npmInstall]) {
	group = 'build'
	description = 'Compile client side assets for production'
	args = ['run', 'build']
}

task prodBuild(type: 'build', dependsOn: [buildClientDev, bootJar])